import de.undercouch.gradle.tasks.download.Download

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath group: 'eu.appsatori', name: 'gradle-fatjar-plugin', version: '0.3'

        classpath group: 'de.undercouch', name: 'gradle-download-task', version: '1.2'
    }
}


plugins {
    id 'java' // or 'groovy' Must be explicitly applied
    id 'com.github.johnrengelman.shadow' version '1.2.2'

}
apply plugin: 'de.undercouch.download'
apply plugin: 'eu.appsatori.fatjar'


group 'bitquest'

apply plugin: 'java'



repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile group: "redis.clients", name: "jedis", version: "2.8.0"
    compile group: "com.google.code.gson", name: "gson", version: "2.4"
    compile 'commons-codec:commons-codec:1.9'
    compile group: 'com.timgroup', name: 'java-statsd-client', version: '3.0.1'
    compile group: 'in.ashwanthkumar', name: 'slack-java-webhook', version: '0.0.7'
    compile group: 'com.mixpanel', name: 'mixpanel-java', version: '1.4.4'
    compile group: 'com.ullink.slack', name: 'simpleslackapi', version: '0.6.0'
    compile group: 'org.spigotmc', name: 'spigot-api', version: project.property("apiversion"), { ext { fatJarExclude = true } }
    compile group: 'org.spigotmc', name: 'spigot', version: project.property("apiversion"), { ext { fatJarExclude = true } }
}
jar {
    actions = []
    dependsOn = []
    dependsOn('fatJar')
    baseName = 'bitquest'
    from('resources') {
        include 'plugin.yml'
        include 'config.yml'
    }
}
processResources {
//    include 'plugin.yml'
}
task setupWorkspace(dependsOn: ['buildSpigot']) {
}
// START Building Spigot and Bukkit

def spigotBuildDir = new File("$buildDir/spigot/")

task buildSpigot(type: JavaExec) {
    if (hasSpigot()) {
        enabled = false;
        dependsOn = [];
    } else {
        dependsOn = ['cleanSpigotBuild', 'downloadBuildTool']
    }
    main = '-jar'
    args new File(spigotBuildDir, "BuildTools.jar").getAbsolutePath(),"--rev",project.property("apibuildtoolversion")
    workingDir = spigotBuildDir
}

task downloadBuildTool(type: Download) {
    spigotBuildDir.mkdirs()
    src project.property("buildtoolurl")
    dest new File(spigotBuildDir, "BuildTools.jar")
}

task cleanSpigotBuild() {
    spigotBuildDir.deleteDir()
}


def hasSpigot() {
    def groupId = "org.spigotmc"
    def version = project.property("apiversion")
    return hasArtifact(groupId, "spigot-api", version) && hasArtifact(groupId, "spigot", version)
}

def hasArtifact(groupId, artifactId, version) {
    def localMavenRepo = new File(new File(ant.properties['user.home'] as String), ".m2/repository/")
    def file = new File(localMavenRepo, groupId.replace('.', '/') + "/" + artifactId + "/" + version + "/")
    return file.exists()
}

// END Building Spigot and Bukkit
